CREATE TABLE SchoolYear (
  idYear INT AUTO_INCREMENT PRIMARY KEY,
  startDate DATE NOT NULL,
  endDate DATE NOT NULL,
  wording VARCHAR(50),
  state BOOLEAN NOT NULL
);

CREATE TABLE Period (
  idPeriod INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  startDate DATE NOT NULL,
  endDate DATE NOT NULL,
  state BOOLEAN NOT NULL,
  idYear INT,
  FOREIGN KEY (idYear) REFERENCES SchoolYear(idYear)
);

CREATE TABLE Law(
    idLaw INT AUTO_INCREMENT PRIMARY KEY,
);

CREATE TABLE Profil(
    idProfil INT AUTO_INCREMENT PRIMARY KEY,
    idLaw INT,
    FOREIGN KEY (idLaw) REFERENCES Law(idLaw)
);

CREATE TABLE Groupp(
    idGroup INT AUTO_INCREMENT PRIMARY KEY,
    idProfil INT,
    FOREIGN KEY (idProfil) REFERENCES Profil(idProfil)
);

CREATE TABLE Subscription(
    idSubscription INT AUTO_INCREMENT PRIMARY KEY,
    yearSubscription Year NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    idYear INT,
    FOREIGN KEY (idYear) REFERENCES SchoolYear(idYear)
);

CREATE TABLE Responsable(
    idResponsable INT AUTO_INCREMENT PRIMARY KEY,
    startFunction DATE NOT NULL,
    endFunction DATE NOT NULL
);

CREATE TABLE Etablishment(
    acronym VARCHAR(10) PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    type VARCHAR(50) NOT NULL,
    idSubscription INT,
    idResponsable INT,
    FOREIGN KEY (idSubscription) REFERENCES Subscription(idSubscription),
    FOREIGN KEY (idResponsable) REFERENCES Responsable(idResponsable)
);

CREATE TABLE Tutor(
    idTutor INT AUTO_INCREMENT PRIMARY KEY,
    functionTutor VARCHAR(50) NOT NULL
);

CREATE TABLE NotificationJournal(
    idStatus INT AUTO_INCREMENT PRIMARY KEY,
    startDate DATE NOT NULL,
    sendTime TIME NOT NULL,
    acknowledgeReception VARCHAR(100) NOT NULL
);

##Suite

CREATE TABLE Student (
    identificationNumber INT AUTO_INCREMENT PRIMARY KEY,
    abandon BOOLEAN NOT NULL,
    acronym VARCHAR(10),
    FOREIGN KEY (acronym) REFERENCES Etablishment(acronym),
    idTutor INT,
    FOREIGN KEY (idTutor) REFERENCES Tutor(idTutor)
);

CREATE TABLE Inscription (
  idInscription INT AUTO_INCREMENT PRIMARY KEY,
  identificationNumber INT,
  idYear INT,
  idClass INT,
  FOREIGN KEY (identificationNumber) REFERENCES Student(identificationNumber),
  FOREIGN KEY (idYear) REFERENCES SchoolYear(idYear),
  FOREIGN KEY (idClass) REFERENCES Class(idClass)
);

CREATE TABLE Class (
  idClass INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  room VARCHAR(100) NOT NULL,  
  idYear INT,
  FOREIGN KEY (idYear) REFERENCES SchoolYear(idYear),
  acronym VARCHAR(10),
  FOREIGN KEY (acronym) REFERENCES Etablishment(acronym)
);

CREATE TABLE Seance(
    idSeance INT AUTO_INCREMENT PRIMARY KEY,
    startDate DATE NOT NULL,
    duration TIME NOT NULL,
    type VARCHAR(50)
);

CREATE TABLE Absence(
    idAbsence INT AUTO_INCREMENT PRIMARY KEY,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    observation VARCHAR(100),
    justification VARCHAR(100),
    justificationPiece BLOB NOT NULL,
    idSeance INT,
    identificationNumber INT,
    FOREIGN KEY (identificationNumber) REFERENCES Student(identificationNumber),
    FOREIGN KEY (idSeance) REFERENCES Seance(idSeance)
);

###
CREATE TABLE Teacher(
    idTeacher INT AUTO_INCREMENT PRIMARY KEY,
    category VARCHAR(50) NOT NULL
);

CREATE TABLE Subject(
    idSubject INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    idTeacher INT,
    idClass INT,
    idSeance INT,
    FOREIGN KEY (idTeacher) REFERENCES Teacher(idTeacher),
    FOREIGN KEY (idClass) REFERENCES Class(idClass),
    FOREIGN KEY (idSeance) REFERENCES Seance(idSeance)
);

###
CREATE TABLE Evaluation(
    idEvaluation INT AUTO_INCREMENT PRIMARY KEY,
    rating FLOAT NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    type VARCHAR(50) NOT NULL,
    appreciation VARCHAR(50)
);

ALTER TABLE Student
ADD idSubject INT REFERENCES Subject(idSubject),
ADD idEvaluation INT REFERENCES Evaluation(idEvaluation);

ALTER TABLE class
ADD idEvauation INT REFERENCES Evaluation(idEvaluation);

ALTER TABLE Class
ADD identificationNumber INT REFERENCES Student;

###
CREATE TABLE Porter_Sur(
    idEvaluation INT,
    idBulletin INT,
    FOREIGN KEY (idEvaluation) REFERENCES Evaluation(idEvaluation),
    FOREIGN KEY (idBulletin) REFERENCES Bulletin(idBulletin)
);

###
CREATE TABLE Parent(
    idParent INT AUTO_INCREMENT PRIMARY KEY,
    functionParent VARCHAR(50),
    identificationNumber INT,
    FOREIGN KEY (identificationNumber) REFERENCES Student(identificationNumber)
);

###
CREATE TABLE Notification(
    idNotification INT AUTO_INCREMENT PRIMARY KEY,
    object VARCHAR(100) NOT NULL,
    type VARCHAR(100) NOT NULL,
    sendPeriod DATE NOT NULL,
    idStatus INT,
    idEvaluation INT,
    idAbsence iNT,
    idTutor INT,
    idParent INT,
    idBulletin INT,
    FOREIGN KEY (idStatus) REFERENCES notificationjournal(idStatus),
    FOREIGN KEY (idEvaluation) REFERENCES Evaluation(idEvaluation),
    FOREIGN KEY (idAbsence) REFERENCES absence(idAbsence),
    FOREIGN KEY (idTutor) REFERENCES Tutor(idTutor),
    FOREIGN KEY (idParent) REFERENCES Parent(idParent),
    FOREIGN KEY (idBulletin) REFERENCES Bulletin(idBulletin)
);

###
CREATE TABLE Users(
    idUser INT AUTO_INCREMENT PRIMARY KEY,
    login VARCHAR(50) NOT NULL,
    userPassword VARCHAR(50) NOT NULL,
    state VARCHAR(50) NOT NULL,
    type ENUM ('parent', 'tutor', 'teacher', 'responsable') NOT NULL
);

###
CREATE TABLE Person(
    idPerson INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    firstname VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    mobilPhone VARCHAR(50) NOT NULL,
    fixedPhone VARCHAR(50) NOT NULL,
    adress VARCHAR(50) NOT NULL,
    CNI BLOB NOT NULL,
    photo BLOB NOT NULL,
    type ENUM('teacher', 'parent', 'tutor', 'users', 'responsable', 'student') NOT NULL
);
##################################################################

Insertion 3 lignes 